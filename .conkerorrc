
// I *really* need browser sessions...
require("session.js");
session_auto_save_auto_load = true;

// And we should patch the modeline up a bit...
add_hook("mode_line_hook", mode_line_adder(buffer_count_widget), true);
add_hook("mode_line_hook", mode_line_adder(loading_count_widget), true);

// auto completion in the minibuffer
minibuffer_auto_complete_default = true;
url_completion_use_history = true;

// I'm pretty used to this behavior. Let's keep it for now.
require("clicks-in-new-buffer.js");
clicks_in_new_buffer_target = OPEN_NEW_BUFFER_BACKGROUND;
// but I'll start trying to jump around instead...
define_key(content_buffer_normal_keymap, "j", "follow-new-buffer");

// Let's also have C-r reload and C-l act like jump-to-address-bar...
// for God's sake try to just press r to reload though.
define_key(content_buffer_normal_keymap, "C-r", "reload");
define_key(content_buffer_normal_keymap, "C-l", "find-alternate-url");
// If only for my friends...
define_key(content_buffer_normal_keymap, "C-t", "find-url-new-buffer");

// And I can't honestly say I'm fond of M-p and M-n
define_key(content_buffer_normal_keymap, "C-tab", "buffer-next")
define_key(content_buffer_normal_keymap, "C-S-tab", "buffer-previous")

// allow for 'contrib' stuff
load_paths.unshift("chrome://conkeror-contrib/content/");

// add some personal webjumps...
add_delicious_webjumps("redline6561");
add_lastfm_webjumps("redline6561");

// teach me something once in a while
homepage = "http://en.wikipedia.org/wiki/Special:Random";
wikipedia_enable_didyoumean = true;

// Download buffers annoy me
remove_hook("download_added_hook", open_download_buffer_automatically);

// Why should I have to restart conkeror to reload my rc?
// I've got like 60 tabs open here!
interactive("rc-reload",
            "Reload .conkerorrc",
            function(I) {
                // Isn't this stored in a variable somewhere? Must I hard code it?
                load("/home/redline/.conkerorrc");
                I.window.minibuffer.message("config reloaded!");
            });

define_key(default_global_keymap, "C-c r", "rc-reload");

interactive("modi", "The Mouseover DOM Inspector, or MODI for short, is a favelet (also known as a bookmarklet)"
            + " that allows you to view and manipulate the DOM of a web page simply "
            + "by mousing around the document (http://slayeroffice.com/tools/modi/v2.0/modi_help.html).",
           function(I) {
               z=I.buffer.document.body.appendChild(I.buffer.document.createElement('script'));
               z.language='javascript';
               z.type='text/javascript';
               z.src='http://slayeroffice.com/tools/modi/v2.0/modi_v2.0.js';
               z.id='modi';
           });

// interactive("copy-url",
//         "Copy the current buffer's URL to the clipboard",
//         function(I) {
//             var text = I.window.buffers.current.document.location.href;
//             writeToClipboard(text);
//             I.window.minibuffer.message("copied: " + text);
//         });

// define_key(default_global_keymap, "C-c u", "copy-url");

// TODO: Well if we can't have firebug, we'll just use firebug lite

// load urls from the command line in new buffers instead
// of new windows.
url_remoting_fn = load_url_in_new_buffer;

// load download buffers in the background in the current
// window, instead of in new windows.
download_buffer_automatic_open_target = OPEN_NEW_BUFFER_BACKGROUND;

// display properties of the current selected node during
// the hints interaction.
hints_display_url_panel = true;

// default directory for downloads and shell commands.
cwd = get_home_directory();
cwd.append("Desktop");

// automatically handle some mime types internally.
content_handlers.set("application/pdf", content_handler_save);

// external programs for handling various mime types.
external_content_handlers.set("application/pdf", "evince");
external_content_handlers.set("video/*", "smplayer");

// use emacsclient as external editor.
editor_shell_command = "emacsclient -c";

// view source in your editor.
view_source_use_external_editor = true;

// let xkcd-mode put the funny alt text into the page.
xkcd_add_title = true;
